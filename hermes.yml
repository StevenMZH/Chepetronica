servers:

  server_1:
    server_name: dev-server
    server_credentials: .env.hermes
    env: .env.dev

    # apps    
    apps:
      chepetronicos:
        app_name: Chepetronica
        repository: https://github.com/StevenMZH/Chepetronica.git
        branch: main
        services: docker-compose.yml
        events: 
          - init
          - status


# Events = calls(interupts) + actions
events:
  # setup-server:
  #   when: call

  #   run_local:
  #     - echo running setup...
  #     # - ssh-keygen -t rsa -b  4096 -f smooth-server -N ""
  #     # - ren smooth-server smooth-server.pem
  #     # - icacls "smooth-server.pem" /inheritance:r
  #     # - icacls "smooth-server.pem" /grant:r "%USERNAME%:R"
      
  #     # - gcloud compute scp "smooth-server.pub" "smenthor12@smooth-server:/home/smenthor12/.ssh/smooth-server.pub" --project=servercenter-462007 --zone=us-central1-f
  #     # - gcloud compute ssh smenthor12@smooth-server --project=servercenter-462007 --zone=us-central1-f --command='cat ~/.ssh/smooth-server.pub >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys'


  #     - ssh -i "C:\Users\LENOVO GAMING\Documents\GitHub\Templates\smooth-server.pem" smenthor12@104.154.160.172

  #     # - gcloud compute firewall-rules create allow-ssh --allow tcp:22 --source-ranges=0.0.0.0/0 --target-tags=ssh --description="Allow SSH"--direction=INGRESS --project=servercenter-462007


  init:
    when: call

    push: 
      - from: .env.dev
        to: .

      - from: docker-compose.yml 
        to: .

    run_local:
      - hermes deploy

    run_serverside: 
      - echo running init...
      - docker compose up --build
      - docker compose exec backend python manage.py makemigrations
      - docker compose exec backend python manage.py migrate
      - docker compose exec backend python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='admin').exists() or User.objects.create_superuser('admin', 'admin@admin.com', 'admin')"


  status:
    when: call

    run_serverside: 
      - docker ps

  # build:
    
